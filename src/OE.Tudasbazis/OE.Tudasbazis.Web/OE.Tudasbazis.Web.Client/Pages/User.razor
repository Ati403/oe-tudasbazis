@page "/User"
@using System.Security.Claims

@rendermode InteractiveWebAssembly

@inject ILocalStorageService LocalStorage
@inject IConfiguration Configuration
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavManager
@inject IToastService Toaster

@using BlazorBootstrap;

<PageTitle>Felhasználó</PageTitle>

<Blazored.Toast.BlazoredToasts />

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <div class="history-container">
                @if (IsHistoryLoading)
                {
                    <Spinner Type="SpinnerType.Border" Color="SpinnerColor.Primary" />
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-dark">
                            <thead>
                                <tr>
                                    <th>Kérdés</th>
                                    <th>Válasz</th>
                                    <th>Dátum</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in QuestionAnswerHistory)
                                {
                                    <tr>
                                        <td>@item.Question</td>
                                        <td>@item.Answer</td>
                                        <td>@item.Timestamp</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }


                <div class="logout-container">
                    <button class="btn btn-primary" @onclick="HandleLogoutAsync">Kijelentkezés</button>
                </div>
            </div>
        </Authorized>
        <NotAuthorized Context="authContext">
            <div class="form-container">
                <h3>Bejelentkezés</h3>

                <EditForm Model="LoginRequestDto" OnValidSubmit="HandleLoginAsync">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="username">Felhasználónév</label>
                        <input id="username" @bind="LoginRequestDto.Username" class="form-control user-input" />
                    </div>

                    <div class="mb-3">
                        <label for="password">Jelszó</label>
                        <input id="password" @bind="LoginRequestDto.Password" type="password" class="form-control user-input" />
                    </div>

                    @if (IsLoginLoading)
                    {
                        <div>
                            <Spinner Type="SpinnerType.Border" Color="SpinnerColor.Primary" />
                        </div>
                    }

                    <div>
                        <button disabled="@IsLoginLoading" type="submit" class="btn btn-primary login-button">Bejelentkezés</button>
                    </div>
                </EditForm>
            </div>

            <hr />

            <div class="form-container">
                <h3>Regisztráció</h3>

                <EditForm Model="RegisterModel" OnValidSubmit="HandleRegisterAsync">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="username">Felhasználónév</label>
                        <input id="username" @bind="RegisterModel.Username" class="form-control user-input" />
                    </div>

                    <div class="mb-3">
                        <label for="password">Jelszó</label>
                        <input id="password" @bind="RegisterModel.Password" type="password" class="form-control user-input" />
                    </div>

                    <div class="mb-3">
                        <label for="password">Jelszó újra</label>
                        <input id="password-again" @bind="RegisterModel.PasswordAgain" type="password" class="form-control user-input" />
                    </div>

                    @if (IsRegisterLoading)
                    {
                        <div>
                            <Spinner Type="SpinnerType.Border" Color="SpinnerColor.Primary" />
                        </div>
                    }

                    <div>
                        <button disabled="@IsRegisterLoading" type="submit" class="btn btn-primary login-button">Regisztráció</button>
                    </div>
                </EditForm>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>